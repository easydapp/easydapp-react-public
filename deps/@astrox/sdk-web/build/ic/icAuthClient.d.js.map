{"version":3,"sources":["../../../src/ic/icAuthClient.d.ts"],"sourcesContent":["import { Identity, SignIdentity } from '@dfinity/agent';\nimport { DelegationChain, DelegationIdentity } from '@dfinity/identity';\nimport { AuthClientCreateOptions, AuthClientLoginOptions, InternetIdentityAuthRequest } from '../types';\nimport { Wallet } from '@astrox/sdk-core';\nimport { AbstractedClientStorage } from '@astrox/sdk-core';\nexport declare class AuthClient {\n    private _identity;\n    private _key;\n    private _chain;\n    private _storage;\n    private _wallet?;\n    private _appId?;\n    private _delegationIdentity?;\n    private _delegationTargets;\n    private _lastRequest?;\n    private _confirm?;\n    private _idpWindowOption?;\n    private _idpWindow?;\n    private _eventHandler?;\n    static create(options?: AuthClientCreateOptions): Promise<AuthClient>;\n    protected constructor(_identity: Identity, _key: SignIdentity | null, _chain: DelegationChain | null, _storage: AbstractedClientStorage, _wallet?: any, _appId?: string | undefined, _delegationIdentity?: DelegationIdentity | undefined, _delegationTargets?: string[], _lastRequest?: InternetIdentityAuthRequest | undefined, _confirm?: boolean | undefined, _idpWindowOption?: string | undefined, _idpWindow?: Window | undefined, _eventHandler?: ((event: MessageEvent) => void) | undefined);\n    private _handleSuccess;\n    getIdentity(): Identity;\n    getLastRequest(): InternetIdentityAuthRequest | undefined;\n    getDelegationIdentity(): DelegationIdentity | undefined;\n    getInnerKey(): SignIdentity | null;\n    getDelegationChain(): DelegationChain | null;\n    get wallet(): Wallet;\n    getConfirm(): boolean | undefined;\n    setWallet(data: Wallet): void;\n    getDelegateTargets(): string[];\n    setDelegationTargets(targets: string[]): void;\n    isAuthenticated(): Promise<boolean>;\n    login(options?: AuthClientLoginOptions): Promise<void>;\n    private _getEventHandler;\n    private _handleFailure;\n    private _removeEventListener;\n    logout(options?: {\n        returnTo?: string;\n    }): Promise<void>;\n}\n"],"names":[],"mappings":"AAKA,WAmCC"}
{"version":3,"sources":["../../../src/ic/icConnect.d.ts"],"sourcesContent":["import { ActorSubclass, HttpAgent, Identity } from '@dfinity/agent';\nimport { InterfaceFactory } from '@dfinity/candid/lib/cjs/idl';\nimport { Principal } from '@dfinity/principal';\nimport { AuthClient } from './icAuthClient';\nimport { ICWindow } from './icWindow';\nimport { ConnectOptions, DelegationMode, PermissionsType, SignerOptions, SignerResponseSuccess, TransactionOptions, TransactionResponseSuccess } from '../types';\nimport { Wallet } from '@astrox/sdk-core';\ndeclare global {\n    interface Window {\n        ic: IC & any;\n    }\n}\nexport interface LoginOptions {\n    identityProvider: string | URL;\n    maxTimeToLive: bigint;\n    permissions: PermissionsType[];\n    delegationTargets: string[] | undefined;\n    delegationModes?: Array<DelegationMode>;\n}\nexport declare class IC extends ICWindow {\n    #private;\n    protected constructor(authClient: AuthClient, agent: HttpAgent);\n    static create(config: any): Promise<IC>;\n    connect(connectOptions: ConnectOptions): Promise<IC>;\n    isAuthenticated(): Promise<boolean>;\n    get identity(): Identity;\n    get principal(): Principal;\n    get wallet(): Wallet | undefined;\n    get delegationTargets(): string[];\n    private _setWalletProvider;\n    private _setSignerProvider;\n    private _setUseFrame;\n    private _setConnectOptions;\n    private _setLoginOptions;\n    get loginOption(): LoginOptions | undefined;\n    get connectOptions(): ConnectOptions | undefined;\n    protected getAuthClient(): AuthClient;\n    disconnect: (options?: {\n        returnTo?: string;\n    }) => Promise<void>;\n    queryBalance: () => Promise<bigint>;\n    handleAuthenticated: ({ ledgerCanisterId, ledgerHost }: {\n        ledgerCanisterId?: string | undefined;\n        ledgerHost?: string | undefined;\n    }) => Promise<void>;\n    private injectWindow;\n    private _appendAuth;\n    handleError(error?: string): void;\n    createActor: <T>(idlFactory: InterfaceFactory, canisterId: string) => Promise<ActorSubclass<T>>;\n    requestTransfer: (options: TransactionOptions) => Promise<TransactionResponseSuccess | undefined | string>;\n    signMessage: (options: SignerOptions) => Promise<SignerResponseSuccess | undefined | string>;\n    private _getSignerHandler;\n    private _getEventHandler;\n    private _handleFailure;\n    private _handleSuccess;\n}\n"],"names":["ICWindow"],"mappings":"AAIA,SAASA,QAAQ,QAAQ,aAAa"}
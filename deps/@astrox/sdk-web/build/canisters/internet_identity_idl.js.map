{"version":3,"sources":["../../../src/canisters/internet_identity_idl.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nexport default ({ IDL }: { IDL: any }) => {\n  const InternetIdentityInit = IDL.Record({\n    assigned_user_number_range: IDL.Tuple(IDL.Nat64, IDL.Nat64),\n  });\n  const UserNumber = IDL.Nat64;\n  const PublicKey = IDL.Vec(IDL.Nat8);\n  const DeviceKey = PublicKey;\n  const KeyType = IDL.Variant({\n    platform: IDL.Null,\n    seed_phrase: IDL.Null,\n    cross_platform: IDL.Null,\n    unknown: IDL.Null,\n  });\n  const Purpose = IDL.Variant({\n    authentication: IDL.Null,\n    recovery: IDL.Null,\n  });\n  const CredentialId = IDL.Vec(IDL.Nat8);\n  const DeviceData = IDL.Record({\n    alias: IDL.Text,\n    pubkey: DeviceKey,\n    key_type: KeyType,\n    purpose: Purpose,\n    credential_id: IDL.Opt(CredentialId),\n  });\n  const FrontendHostname = IDL.Text;\n  const SessionKey = PublicKey;\n  const Timestamp = IDL.Nat64;\n  const Delegation = IDL.Record({\n    pubkey: PublicKey,\n    targets: IDL.Opt(IDL.Vec(IDL.Principal)),\n    expiration: Timestamp,\n  });\n  const SignedDelegation = IDL.Record({\n    signature: IDL.Vec(IDL.Nat8),\n    delegation: Delegation,\n  });\n  const GetDelegationResponse = IDL.Variant({\n    no_such_delegation: IDL.Null,\n    signed_delegation: SignedDelegation,\n  });\n  const HeaderField = IDL.Tuple(IDL.Text, IDL.Text);\n  const HttpRequest = IDL.Record({\n    url: IDL.Text,\n    method: IDL.Text,\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(HeaderField),\n  });\n  const Token = IDL.Record({});\n  const StreamingCallbackHttpResponse = IDL.Record({\n    token: IDL.Opt(Token),\n    body: IDL.Vec(IDL.Nat8),\n  });\n  const StreamingStrategy = IDL.Variant({\n    Callback: IDL.Record({\n      token: Token,\n      callback: IDL.Func([Token], [StreamingCallbackHttpResponse], ['query']),\n    }),\n  });\n  const HttpResponse = IDL.Record({\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(HeaderField),\n    streaming_strategy: IDL.Opt(StreamingStrategy),\n    status_code: IDL.Nat16,\n  });\n  const UserKey = PublicKey;\n  const ProofOfWork = IDL.Record({\n    nonce: IDL.Nat64,\n    timestamp: Timestamp,\n  });\n  const RegisterResponse = IDL.Variant({\n    canister_full: IDL.Null,\n    registered: IDL.Record({ user_number: UserNumber }),\n  });\n  const InternetIdentityStats = IDL.Record({\n    users_registered: IDL.Nat64,\n    assigned_user_number_range: IDL.Tuple(IDL.Nat64, IDL.Nat64),\n  });\n  return IDL.Service({\n    add: IDL.Func([UserNumber, DeviceData], [], []),\n    get_delegation: IDL.Func([UserNumber, FrontendHostname, SessionKey, Timestamp], [GetDelegationResponse], ['query']),\n    http_request: IDL.Func([HttpRequest], [HttpResponse], ['query']),\n    init_salt: IDL.Func([], [], []),\n    lookup: IDL.Func([UserNumber], [IDL.Vec(DeviceData)], ['query']),\n    prepare_delegation: IDL.Func([UserNumber, FrontendHostname, SessionKey, IDL.Opt(IDL.Nat64)], [UserKey, Timestamp], []),\n    register: IDL.Func([DeviceData, ProofOfWork], [RegisterResponse], []),\n    remove: IDL.Func([UserNumber, DeviceKey], [], []),\n    stats: IDL.Func([], [InternetIdentityStats], ['query']),\n  });\n};\nexport const init = ({ IDL }: { IDL: any }) => {\n  const InternetIdentityInit = IDL.Record({\n    assigned_user_number_range: IDL.Tuple(IDL.Nat64, IDL.Nat64),\n  });\n  return [IDL.Opt(InternetIdentityInit)];\n};\n"],"names":["IDL","InternetIdentityInit","Record","assigned_user_number_range","Tuple","Nat64","UserNumber","PublicKey","Vec","Nat8","DeviceKey","KeyType","Variant","platform","Null","seed_phrase","cross_platform","unknown","Purpose","authentication","recovery","CredentialId","DeviceData","alias","Text","pubkey","key_type","purpose","credential_id","Opt","FrontendHostname","SessionKey","Timestamp","Delegation","targets","Principal","expiration","SignedDelegation","signature","delegation","GetDelegationResponse","no_such_delegation","signed_delegation","HeaderField","HttpRequest","url","method","body","headers","Token","StreamingCallbackHttpResponse","token","StreamingStrategy","Callback","callback","Func","HttpResponse","streaming_strategy","status_code","Nat16","UserKey","ProofOfWork","nonce","timestamp","RegisterResponse","canister_full","registered","user_number","InternetIdentityStats","users_registered","Service","add","get_delegation","http_request","init_salt","lookup","prepare_delegation","register","remove","stats","init"],"mappings":"AACA,eAAe,CAAA,CAAC,EAAEA,GAAG,EAAgB;IACnC,MAAMC,uBAAuBD,IAAIE,MAAM,CAAC;QACtCC,4BAA4BH,IAAII,KAAK,CAACJ,IAAIK,KAAK,EAAEL,IAAIK,KAAK;IAC5D;IACA,MAAMC,aAAaN,IAAIK,KAAK;IAC5B,MAAME,YAAYP,IAAIQ,GAAG,CAACR,IAAIS,IAAI;IAClC,MAAMC,YAAYH;IAClB,MAAMI,UAAUX,IAAIY,OAAO,CAAC;QAC1BC,UAAUb,IAAIc,IAAI;QAClBC,aAAaf,IAAIc,IAAI;QACrBE,gBAAgBhB,IAAIc,IAAI;QACxBG,SAASjB,IAAIc,IAAI;IACnB;IACA,MAAMI,UAAUlB,IAAIY,OAAO,CAAC;QAC1BO,gBAAgBnB,IAAIc,IAAI;QACxBM,UAAUpB,IAAIc,IAAI;IACpB;IACA,MAAMO,eAAerB,IAAIQ,GAAG,CAACR,IAAIS,IAAI;IACrC,MAAMa,aAAatB,IAAIE,MAAM,CAAC;QAC5BqB,OAAOvB,IAAIwB,IAAI;QACfC,QAAQf;QACRgB,UAAUf;QACVgB,SAAST;QACTU,eAAe5B,IAAI6B,GAAG,CAACR;IACzB;IACA,MAAMS,mBAAmB9B,IAAIwB,IAAI;IACjC,MAAMO,aAAaxB;IACnB,MAAMyB,YAAYhC,IAAIK,KAAK;IAC3B,MAAM4B,aAAajC,IAAIE,MAAM,CAAC;QAC5BuB,QAAQlB;QACR2B,SAASlC,IAAI6B,GAAG,CAAC7B,IAAIQ,GAAG,CAACR,IAAImC,SAAS;QACtCC,YAAYJ;IACd;IACA,MAAMK,mBAAmBrC,IAAIE,MAAM,CAAC;QAClCoC,WAAWtC,IAAIQ,GAAG,CAACR,IAAIS,IAAI;QAC3B8B,YAAYN;IACd;IACA,MAAMO,wBAAwBxC,IAAIY,OAAO,CAAC;QACxC6B,oBAAoBzC,IAAIc,IAAI;QAC5B4B,mBAAmBL;IACrB;IACA,MAAMM,cAAc3C,IAAII,KAAK,CAACJ,IAAIwB,IAAI,EAAExB,IAAIwB,IAAI;IAChD,MAAMoB,cAAc5C,IAAIE,MAAM,CAAC;QAC7B2C,KAAK7C,IAAIwB,IAAI;QACbsB,QAAQ9C,IAAIwB,IAAI;QAChBuB,MAAM/C,IAAIQ,GAAG,CAACR,IAAIS,IAAI;QACtBuC,SAAShD,IAAIQ,GAAG,CAACmC;IACnB;IACA,MAAMM,QAAQjD,IAAIE,MAAM,CAAC,CAAC;IAC1B,MAAMgD,gCAAgClD,IAAIE,MAAM,CAAC;QAC/CiD,OAAOnD,IAAI6B,GAAG,CAACoB;QACfF,MAAM/C,IAAIQ,GAAG,CAACR,IAAIS,IAAI;IACxB;IACA,MAAM2C,oBAAoBpD,IAAIY,OAAO,CAAC;QACpCyC,UAAUrD,IAAIE,MAAM,CAAC;YACnBiD,OAAOF;YACPK,UAAUtD,IAAIuD,IAAI,CAAC;gBAACN;aAAM,EAAE;gBAACC;aAA8B,EAAE;gBAAC;aAAQ;QACxE;IACF;IACA,MAAMM,eAAexD,IAAIE,MAAM,CAAC;QAC9B6C,MAAM/C,IAAIQ,GAAG,CAACR,IAAIS,IAAI;QACtBuC,SAAShD,IAAIQ,GAAG,CAACmC;QACjBc,oBAAoBzD,IAAI6B,GAAG,CAACuB;QAC5BM,aAAa1D,IAAI2D,KAAK;IACxB;IACA,MAAMC,UAAUrD;IAChB,MAAMsD,cAAc7D,IAAIE,MAAM,CAAC;QAC7B4D,OAAO9D,IAAIK,KAAK;QAChB0D,WAAW/B;IACb;IACA,MAAMgC,mBAAmBhE,IAAIY,OAAO,CAAC;QACnCqD,eAAejE,IAAIc,IAAI;QACvBoD,YAAYlE,IAAIE,MAAM,CAAC;YAAEiE,aAAa7D;QAAW;IACnD;IACA,MAAM8D,wBAAwBpE,IAAIE,MAAM,CAAC;QACvCmE,kBAAkBrE,IAAIK,KAAK;QAC3BF,4BAA4BH,IAAII,KAAK,CAACJ,IAAIK,KAAK,EAAEL,IAAIK,KAAK;IAC5D;IACA,OAAOL,IAAIsE,OAAO,CAAC;QACjBC,KAAKvE,IAAIuD,IAAI,CAAC;YAACjD;YAAYgB;SAAW,EAAE,EAAE,EAAE,EAAE;QAC9CkD,gBAAgBxE,IAAIuD,IAAI,CAAC;YAACjD;YAAYwB;YAAkBC;YAAYC;SAAU,EAAE;YAACQ;SAAsB,EAAE;YAAC;SAAQ;QAClHiC,cAAczE,IAAIuD,IAAI,CAAC;YAACX;SAAY,EAAE;YAACY;SAAa,EAAE;YAAC;SAAQ;QAC/DkB,WAAW1E,IAAIuD,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;QAC9BoB,QAAQ3E,IAAIuD,IAAI,CAAC;YAACjD;SAAW,EAAE;YAACN,IAAIQ,GAAG,CAACc;SAAY,EAAE;YAAC;SAAQ;QAC/DsD,oBAAoB5E,IAAIuD,IAAI,CAAC;YAACjD;YAAYwB;YAAkBC;YAAY/B,IAAI6B,GAAG,CAAC7B,IAAIK,KAAK;SAAE,EAAE;YAACuD;YAAS5B;SAAU,EAAE,EAAE;QACrH6C,UAAU7E,IAAIuD,IAAI,CAAC;YAACjC;YAAYuC;SAAY,EAAE;YAACG;SAAiB,EAAE,EAAE;QACpEc,QAAQ9E,IAAIuD,IAAI,CAAC;YAACjD;YAAYI;SAAU,EAAE,EAAE,EAAE,EAAE;QAChDqE,OAAO/E,IAAIuD,IAAI,CAAC,EAAE,EAAE;YAACa;SAAsB,EAAE;YAAC;SAAQ;IACxD;AACF,CAAA,EAAE;AACF,OAAO,MAAMY,OAAO,CAAC,EAAEhF,GAAG,EAAgB;IACxC,MAAMC,uBAAuBD,IAAIE,MAAM,CAAC;QACtCC,4BAA4BH,IAAII,KAAK,CAACJ,IAAIK,KAAK,EAAEL,IAAIK,KAAK;IAC5D;IACA,OAAO;QAACL,IAAI6B,GAAG,CAAC5B;KAAsB;AACxC,EAAE"}
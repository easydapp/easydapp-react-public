{"version":3,"sources":["../../../src/canisters/ledger.d.ts"],"sourcesContent":["import type { Principal } from '@dfinity/principal';\nexport interface AccountBalanceArgs {\n  account: AccountIdentifier;\n}\nexport type AccountIdentifier = string;\nexport interface ArchiveOptions {\n  max_message_size_bytes: [] | [number];\n  node_max_memory_size_bytes: [] | [number];\n  controller_id: Principal;\n}\nexport type BlockHeight = bigint;\nexport type CanisterId = Principal;\nexport interface Duration {\n  secs: bigint;\n  nanos: number;\n}\nexport type HeaderField = [string, string];\nexport interface HttpRequest {\n  url: string;\n  method: string;\n  body: Array<number>;\n  headers: Array<HeaderField>;\n}\nexport interface HttpResponse {\n  body: Array<number>;\n  headers: Array<HeaderField>;\n  status_code: number;\n}\nexport interface ICPTs {\n  e8s: bigint;\n}\nexport interface LedgerCanisterInitPayload {\n  send_whitelist: Array<[Principal]>;\n  minting_account: AccountIdentifier;\n  transaction_window: [] | [Duration];\n  max_message_size_bytes: [] | [number];\n  archive_options: [] | [ArchiveOptions];\n  initial_values: Array<[AccountIdentifier, ICPTs]>;\n}\nexport type Memo = bigint;\nexport interface NotifyCanisterArgs {\n  to_subaccount: [] | [SubAccount];\n  from_subaccount: [] | [SubAccount];\n  to_canister: Principal;\n  max_fee: ICPTs;\n  block_height: BlockHeight;\n}\nexport interface SendArgs {\n  to: AccountIdentifier;\n  fee: ICPTs;\n  memo: Memo;\n  from_subaccount: [] | [SubAccount];\n  created_at_time: [] | [TimeStamp];\n  amount: ICPTs;\n}\nexport type SubAccount = Array<number>;\nexport interface TimeStamp {\n  timestamp_nanos: bigint;\n}\nexport interface Transaction {\n  memo: Memo;\n  created_at: BlockHeight;\n  transfer: Transfer;\n}\nexport type Transfer =\n  | {\n      Burn: { from: AccountIdentifier; amount: ICPTs };\n    }\n  | { Mint: { to: AccountIdentifier; amount: ICPTs } }\n  | {\n      Send: {\n        to: AccountIdentifier;\n        from: AccountIdentifier;\n        amount: ICPTs;\n      };\n    };\nexport default interface _SERVICE {\n  account_balance_dfx: (arg_0: AccountBalanceArgs) => Promise<ICPTs>;\n  get_nodes: () => Promise<Array<CanisterId>>;\n  http_request: (arg_0: HttpRequest) => Promise<HttpResponse>;\n  notify_dfx: (arg_0: NotifyCanisterArgs) => Promise<undefined>;\n  send_dfx: (arg_0: SendArgs) => Promise<BlockHeight>;\n}\n"],"names":[],"mappings":"AA4EA,WAMC"}
{"version":3,"sources":["../../../src/canisters/me.d.ts"],"sourcesContent":["import type { Principal } from '@dfinity/principal';\nexport interface AccountDetails {\n  principal: Principal;\n  account_identifier: AccountIdentifier;\n  hardware_wallet_accounts: Array<HardwareWalletAccountDetails>;\n  sub_accounts: Array<SubAccountDetails>;\n}\nexport interface AccountDetailsResult {\n  account_details: [] | [AccountDetails];\n  anchor_number: string;\n}\nexport type AccountIdentifier = string;\nexport type AuthType = { Login: null } | { Recovery: null } | { Register: null };\nexport type CredentialId = Array<number>;\nexport interface Delegation {\n  pubkey: PublicKey;\n  targets: [] | [Array<Principal>];\n  expiration: Timestamp;\n}\nexport type DeviceAddResponse = { added: { user_name: string } } | { failed: null };\nexport interface DeviceData {\n  device_name: string;\n  device_type: DeviceType;\n  pub_key: DeviceKey;\n  purpose: Purpose;\n  credential_id: [] | [CredentialId];\n}\nexport interface DeviceDataExternal {\n  device_name: string;\n  device_type: DeviceType;\n  pub_key: string;\n  purpose: Purpose;\n  credential_id: [] | [CredentialId];\n}\nexport type DeviceKey = PublicKey;\nexport type DeviceRemoveResponse = { failed: null } | { removed: null };\nexport type DeviceType = { IdentityProvider: null } | { SecurityDevice: null } | { EthereumMetaMask: null };\nexport type GetDelegationResponse = { no_such_delegation: null } | { signed_delegation: SignedDelegation };\nexport interface GetDelegationResponseQr {\n  user_key: UserKey;\n  extra: string;\n  get_delegation_response: GetDelegationResponse;\n}\nexport interface HardwareWalletAccountDetails {\n  principal: Principal;\n  name: string;\n  account_identifier: AccountIdentifier;\n}\nexport interface IPProfile {\n  user_name: string;\n  role_type: RoleType;\n  devices: Array<DeviceData>;\n}\nexport interface Profile {\n  user_name: string;\n  role_type: RoleType;\n  devices: Array<DeviceData>;\n}\nexport type PublicKey = Array<number>;\nexport type Purpose = { authentication: null } | { recovery: null };\nexport type RegisterResponse = { canister_full: null } | { registered: { user_name: string } };\nexport type RoleType = { Sub: null } | { Main: null };\nexport type SessionKey = PublicKey;\nexport interface SignedDelegation {\n  signature: Array<number>;\n  delegation: Delegation;\n}\nexport type SubAccount = Array<number>;\nexport interface SubAccountDetails {\n  name: string;\n  sub_account: SubAccount;\n  account_identifier: AccountIdentifier;\n}\nexport type Timestamp = bigint;\nexport type UpdateNNSWalletResponse = { success: null } | { failed: null };\nexport type UserKey = PublicKey;\nexport default interface _SERVICE {\n  add_ii_anchor_number: (arg_0: string, arg_1: DeviceType, arg_2: string) => Promise<Array<string>>;\n  add_new_device: (arg_0: DeviceDataExternal, arg_1: string, arg_2: DeviceType) => Promise<DeviceAddResponse>;\n  get_delegation: (arg_0: string, arg_1: DeviceType, arg_2: string, arg_3: SessionKey, arg_4: Timestamp) => Promise<GetDelegationResponse>;\n  get_delegation_qr: (arg_0: string) => Promise<[] | [GetDelegationResponseQr]>;\n  get_ii_anchor_number_by_name: (arg_0: string) => Promise<Array<string>>;\n  get_nns_wallets: (arg_0: string, arg_1: [] | [string]) => Promise<Array<AccountDetailsResult>>;\n  get_profile_by_name: (arg_0: string) => Promise<[[] | [Profile], Array<Profile>, Array<IPProfile>]>;\n  prepare_delegation: (arg_0: string, arg_1: DeviceType, arg_2: string, arg_3: SessionKey, arg_4: [] | [bigint]) => Promise<[UserKey, Timestamp]>;\n  prepare_delegation_qr: (\n    arg_0: string,\n    arg_1: string,\n    arg_2: DeviceType,\n    arg_3: string,\n    arg_4: SessionKey,\n    arg_5: [] | [bigint],\n    arg_6: string,\n  ) => Promise<[UserKey, Timestamp]>;\n  register_user_main: (arg_0: string, arg_1: DeviceDataExternal) => Promise<RegisterResponse>;\n  unbind_device: (arg_0: string, arg_1: string, arg_2: DeviceType) => Promise<DeviceRemoveResponse>;\n  update_nns_wallets: (arg_0: string, arg_1: DeviceType, arg_2: string, arg_3: AccountDetails) => Promise<UpdateNNSWalletResponse>;\n}\n"],"names":[],"mappings":"AA4EA,WAqBC"}
{"version":3,"sources":["../../../src/canisters/ledger.idl.ts"],"sourcesContent":["export default ({ IDL }: { IDL: any }) => {\n  const AccountIdentifier = IDL.Text;\n  const Duration = IDL.Record({ secs: IDL.Nat64, nanos: IDL.Nat32 });\n  const ArchiveOptions = IDL.Record({\n    max_message_size_bytes: IDL.Opt(IDL.Nat32),\n    node_max_memory_size_bytes: IDL.Opt(IDL.Nat32),\n    controller_id: IDL.Principal,\n  });\n  const ICPTs = IDL.Record({ e8s: IDL.Nat64 });\n  const LedgerCanisterInitPayload = IDL.Record({\n    send_whitelist: IDL.Vec(IDL.Tuple(IDL.Principal)),\n    minting_account: AccountIdentifier,\n    transaction_window: IDL.Opt(Duration),\n    max_message_size_bytes: IDL.Opt(IDL.Nat32),\n    archive_options: IDL.Opt(ArchiveOptions),\n    initial_values: IDL.Vec(IDL.Tuple(AccountIdentifier, ICPTs)),\n  });\n  const AccountBalanceArgs = IDL.Record({ account: AccountIdentifier });\n  const CanisterId = IDL.Principal;\n  const HeaderField = IDL.Tuple(IDL.Text, IDL.Text);\n  const HttpRequest = IDL.Record({\n    url: IDL.Text,\n    method: IDL.Text,\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(HeaderField),\n  });\n  const HttpResponse = IDL.Record({\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(HeaderField),\n    status_code: IDL.Nat16,\n  });\n  const SubAccount = IDL.Vec(IDL.Nat8);\n  const BlockHeight = IDL.Nat64;\n  const NotifyCanisterArgs = IDL.Record({\n    to_subaccount: IDL.Opt(SubAccount),\n    from_subaccount: IDL.Opt(SubAccount),\n    to_canister: IDL.Principal,\n    max_fee: ICPTs,\n    block_height: BlockHeight,\n  });\n  const Memo = IDL.Nat64;\n  const TimeStamp = IDL.Record({ timestamp_nanos: IDL.Nat64 });\n  const SendArgs = IDL.Record({\n    to: AccountIdentifier,\n    fee: ICPTs,\n    memo: Memo,\n    from_subaccount: IDL.Opt(SubAccount),\n    created_at_time: IDL.Opt(TimeStamp),\n    amount: ICPTs,\n  });\n  return IDL.Service({\n    account_balance_dfx: IDL.Func([AccountBalanceArgs], [ICPTs], ['query']),\n    get_nodes: IDL.Func([], [IDL.Vec(CanisterId)], ['query']),\n    http_request: IDL.Func([HttpRequest], [HttpResponse], ['query']),\n    notify_dfx: IDL.Func([NotifyCanisterArgs], [], []),\n    send_dfx: IDL.Func([SendArgs], [BlockHeight], []),\n  });\n};\nexport const init = ({ IDL }: { IDL: any }) => {\n  const AccountIdentifier = IDL.Text;\n  const Duration = IDL.Record({ secs: IDL.Nat64, nanos: IDL.Nat32 });\n  const ArchiveOptions = IDL.Record({\n    max_message_size_bytes: IDL.Opt(IDL.Nat32),\n    node_max_memory_size_bytes: IDL.Opt(IDL.Nat32),\n    controller_id: IDL.Principal,\n  });\n  const ICPTs = IDL.Record({ e8s: IDL.Nat64 });\n  const LedgerCanisterInitPayload = IDL.Record({\n    send_whitelist: IDL.Vec(IDL.Tuple(IDL.Principal)),\n    minting_account: AccountIdentifier,\n    transaction_window: IDL.Opt(Duration),\n    max_message_size_bytes: IDL.Opt(IDL.Nat32),\n    archive_options: IDL.Opt(ArchiveOptions),\n    initial_values: IDL.Vec(IDL.Tuple(AccountIdentifier, ICPTs)),\n  });\n  return [LedgerCanisterInitPayload];\n};\n"],"names":["IDL","AccountIdentifier","Text","Duration","Record","secs","Nat64","nanos","Nat32","ArchiveOptions","max_message_size_bytes","Opt","node_max_memory_size_bytes","controller_id","Principal","ICPTs","e8s","LedgerCanisterInitPayload","send_whitelist","Vec","Tuple","minting_account","transaction_window","archive_options","initial_values","AccountBalanceArgs","account","CanisterId","HeaderField","HttpRequest","url","method","body","Nat8","headers","HttpResponse","status_code","Nat16","SubAccount","BlockHeight","NotifyCanisterArgs","to_subaccount","from_subaccount","to_canister","max_fee","block_height","Memo","TimeStamp","timestamp_nanos","SendArgs","to","fee","memo","created_at_time","amount","Service","account_balance_dfx","Func","get_nodes","http_request","notify_dfx","send_dfx","init"],"mappings":"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"}
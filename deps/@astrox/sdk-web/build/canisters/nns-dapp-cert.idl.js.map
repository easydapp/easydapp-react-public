{"version":3,"sources":["../../../src/canisters/nns-dapp-cert.idl.ts"],"sourcesContent":["export default ({ IDL }: { IDL: any }) => {\n  const AccountIdentifier = IDL.Text;\n  const SubAccount = IDL.Vec(IDL.Nat8);\n  const SubAccountDetails = IDL.Record({\n    name: IDL.Text,\n    sub_account: SubAccount,\n    account_identifier: AccountIdentifier,\n  });\n  const HardwareWalletAccountDetails = IDL.Record({\n    principal: IDL.Principal,\n    name: IDL.Text,\n    account_identifier: AccountIdentifier,\n  });\n  const AccountDetails = IDL.Record({\n    principal: IDL.Principal,\n    account_identifier: AccountIdentifier,\n    hardware_wallet_accounts: IDL.Vec(HardwareWalletAccountDetails),\n    sub_accounts: IDL.Vec(SubAccountDetails),\n  });\n  const GetAccountResponse = IDL.Variant({\n    Ok: AccountDetails,\n    AccountNotFound: IDL.Null,\n  });\n  const CanisterDetails = IDL.Record({\n    name: IDL.Text,\n    canister_id: IDL.Principal,\n  });\n  const BlockHeight = IDL.Nat64;\n  const CanisterId = IDL.Principal;\n  const GetTransactionsRequest = IDL.Record({\n    page_size: IDL.Nat8,\n    offset: IDL.Nat32,\n    account_identifier: AccountIdentifier,\n  });\n  const TransactionType = IDL.Variant({\n    Burn: IDL.Null,\n    Mint: IDL.Null,\n    Send: IDL.Null,\n    StakeNeuronNotification: IDL.Null,\n    TopUpCanister: CanisterId,\n    CreateCanister: IDL.Null,\n    TopUpNeuron: IDL.Null,\n    StakeNeuron: IDL.Null,\n  });\n  const Timestamp = IDL.Record({ timestamp_nanos: IDL.Nat64 });\n  const ICPTs = IDL.Record({ e8s: IDL.Nat64 });\n  const Send = IDL.Record({\n    to: AccountIdentifier,\n    fee: ICPTs,\n    amount: ICPTs,\n  });\n  const Receive = IDL.Record({\n    fee: ICPTs,\n    from: AccountIdentifier,\n    amount: ICPTs,\n  });\n  const Transfer = IDL.Variant({\n    Burn: IDL.Record({ amount: ICPTs }),\n    Mint: IDL.Record({ amount: ICPTs }),\n    Send: Send,\n    Receive: Receive,\n  });\n  const Transaction = IDL.Record({\n    transaction_type: IDL.Opt(TransactionType),\n    memo: IDL.Nat64,\n    timestamp: Timestamp,\n    block_height: BlockHeight,\n    transfer: Transfer,\n  });\n  const GetTransactionsResponse = IDL.Record({\n    total: IDL.Nat32,\n    transactions: IDL.Vec(Transaction),\n  });\n\n  return IDL.Service({\n    get_account: IDL.Func([], [GetAccountResponse]),\n    get_canisters: IDL.Func([], [IDL.Vec(CanisterDetails)]),\n    get_transactions: IDL.Func([GetTransactionsRequest], [GetTransactionsResponse]),\n  });\n};\nexport const init = ({ IDL }: { IDL: any }) => {\n  return [];\n};\n"],"names":["IDL","AccountIdentifier","Text","SubAccount","Vec","Nat8","SubAccountDetails","Record","name","sub_account","account_identifier","HardwareWalletAccountDetails","principal","Principal","AccountDetails","hardware_wallet_accounts","sub_accounts","GetAccountResponse","Variant","Ok","AccountNotFound","Null","CanisterDetails","canister_id","BlockHeight","Nat64","CanisterId","GetTransactionsRequest","page_size","offset","Nat32","TransactionType","Burn","Mint","Send","StakeNeuronNotification","TopUpCanister","CreateCanister","TopUpNeuron","StakeNeuron","Timestamp","timestamp_nanos","ICPTs","e8s","to","fee","amount","Receive","from","Transfer","Transaction","transaction_type","Opt","memo","timestamp","block_height","transfer","GetTransactionsResponse","total","transactions","Service","get_account","Func","get_canisters","get_transactions","init"],"mappings":"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"}
{"version":3,"sources":["../../../src/connections/baseConnection.ts"],"sourcesContent":["import { Actor, ActorSubclass, DerEncodedPublicKey, HttpAgent, Signature, SignIdentity } from '@dfinity/agent';\n// import { blobFromUint8Array, derBlobFromBlob } from '@dfinity/candid';\nimport { InterfaceFactory } from '@dfinity/candid/lib/cjs/idl';\nimport { Delegation, DelegationChain, DelegationIdentity, Ed25519KeyIdentity } from '@dfinity/identity';\nimport { Principal } from '@dfinity/principal';\nimport { AbstractConnection, CreateActorResult, DelegationMessage, HandleDelegationResult } from '../types';\n\nexport function createConnection<T>(\n  identity: SignIdentity,\n  delegationIdentity: DelegationIdentity,\n  canisterId: string,\n  interfaceFactory: InterfaceFactory,\n  actor?: ActorSubclass<T>,\n  agent?: HttpAgent,\n): BaseConnection<T> {\n  return new BaseConnection<T>(identity, delegationIdentity, canisterId, interfaceFactory, actor, agent);\n}\n\nexport const requestDelegation = async (\n  identity: SignIdentity,\n  { canisterId, date }: { canisterId?: string; date?: Date },\n): Promise<DelegationIdentity> => {\n  const sessionKey = Ed25519KeyIdentity.generate();\n  const chain = await DelegationChain.create(identity, sessionKey.getPublicKey(), date || new Date(Date.parse('2100-01-01')), {\n    targets: canisterId != undefined ? [Principal.fromText(canisterId)] : undefined,\n  });\n\n  return DelegationIdentity.fromDelegation(sessionKey, chain);\n};\n\nexport async function _createActor<T>(\n  interfaceFactory: InterfaceFactory,\n  canisterId: string,\n  identity?: SignIdentity,\n  host?: string,\n): Promise<CreateActorResult<T>> {\n  const agent = new HttpAgent({ identity, host });\n  // Only fetch the root key when we're not in prod\n//   if (process && (process.env?.NODE_ENV === 'development' || process.env?.II_ENV === 'development')) {\n//     await agent.fetchRootKey();\n//   }\n  const actor = Actor.createActor<T>(interfaceFactory, {\n    agent,\n    canisterId,\n  });\n  return { actor, agent };\n}\n\nexport class BaseConnection<T> implements AbstractConnection<T> {\n  constructor(\n    public identity: SignIdentity,\n    public delegationIdentity: DelegationIdentity,\n    public canisterId: string,\n    public interfaceFactory: InterfaceFactory,\n    public actor?: ActorSubclass<T>,\n    public agent?: HttpAgent,\n  ) {}\n  async getActor(): Promise<ActorSubclass<T>> {\n    throw new Error('Method not implemented.');\n  }\n\n  protected async _getActor(canisterId: string, interfaceFactory: InterfaceFactory, date?: Date): Promise<ActorSubclass<T>> {\n    if (this.delegationIdentity) {\n      for (const { delegation } of this.delegationIdentity.getDelegation().delegations) {\n        // prettier-ignore\n        if (+new Date(Number(delegation.expiration / BigInt(1000000))) <= +Date.now()) {\n          this.actor = undefined;\n          break;\n        }\n      }\n    }\n    if (this.actor === undefined) {\n      // Create our actor with a DelegationIdentity to avoid re-prompting auth\n      this.delegationIdentity = await requestDelegation(this.identity, {\n        canisterId: this.canisterId ?? canisterId,\n        date: date ?? undefined,\n      });\n      this.actor = (await _createActor<T>(interfaceFactory, this.canisterId ?? canisterId, this.delegationIdentity)).actor as ActorSubclass<T>;\n    }\n    return this.actor;\n  }\n}\n\nexport async function handleDelegation(message: DelegationMessage, key: SignIdentity): Promise<HandleDelegationResult> {\n  const delegations = message.delegations.map(signedDelegation => {\n    return {\n      delegation: new Delegation(signedDelegation.delegation.pubkey, signedDelegation.delegation.expiration, signedDelegation.delegation.targets),\n      signature: signedDelegation.signature.buffer as Signature,\n    };\n  });\n\n  const delegationChain = DelegationChain.fromDelegations(delegations, message.userPublicKey.buffer as DerEncodedPublicKey);\n  return {\n    delegationChain,\n    delegationIdentity: DelegationIdentity.fromDelegation(key, delegationChain),\n  };\n}\n\nexport const executeWithLogging = async <T>(func: () => Promise<T>): Promise<T> => {\n  try {\n    return await func();\n  } catch (e) {\n    console.log(e);\n    throw e;\n  }\n};\n"],"names":["Actor","HttpAgent","Delegation","DelegationChain","DelegationIdentity","Ed25519KeyIdentity","Principal","createConnection","identity","delegationIdentity","canisterId","interfaceFactory","actor","agent","BaseConnection","requestDelegation","date","sessionKey","generate","chain","create","getPublicKey","Date","parse","targets","undefined","fromText","fromDelegation","_createActor","host","createActor","constructor","getActor","Error","_getActor","delegation","getDelegation","delegations","Number","expiration","BigInt","now","handleDelegation","message","key","map","signedDelegation","pubkey","signature","buffer","delegationChain","fromDelegations","userPublicKey","executeWithLogging","func","e","console","log"],"mappings":"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"}